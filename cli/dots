#!/usr/bin/env python3

"""
Yet another dotfiles management tool
"""

import os
import yaml
import argparse

from modules import context
from modules import shellrc
from modules import dotfiles
from modules.util import env
from modules.util import logger


def parse_args():
    """
    Parses argument from command line
    """
    parser = argparse.ArgumentParser(description='The .shellrc and dottools installer tool')

    parser.add_argument(
        '--config-file', '-c',
        help='Configuration description (.yaml)',
        default=os.getenv(env.CONFIG_FILE_PATH_ENV_VAR),
    )
    parser.add_argument(
        '--root',
        help='dottols root directory',
        default=os.getenv(
            env.ROOT_PATH_ENV_VAR,
            default=os.path.dirname(os.path.dirname(__file__)),
        ),
    )
    parser.add_argument(
        '--dry-run',
        help='Only print which actions will be done instead of doing anything',
        default=False,
        action='store_true',
    )
    parser.add_argument(
        '--log-level', '-l',
        help='Logging level [0..3]',
        default=1,
        action='store',
        type=int,
    )
    parser.add_argument(
        '--diff', '-d',
        help='Show diff',
        action='store_true',
    )

    subparsers = parser.add_subparsers(title='Commands', dest='command')
    subparsers.add_parser('show', help='Show preprocessed configuration')
    subparsers.add_parser('shellrc', help='Install .shellrc')
    subparsers.add_parser('dotfiles', help='Install dotfiles')
    subparsers.add_parser('all', help='Apply everything')
    subparsers.add_parser('diff', help='Diff mode')

    return parser.parse_args()


def main(args):
    """
    Cli main function
    """

    if args.dry_run:
        args.log_level = max(args.log_level, logger.LEVEL_ACTION)

    if args.command == 'diff':
        args.diff = True
        args.dry_run = True
        args.log_level = max(args.log_level, logger.LEVEL_DIFF)

    ctx = context.Context(
        config_path=os.path.realpath(args.config_file),
        dot_root=os.path.realpath(args.root),
        dry_run=args.dry_run,
        log_level=args.log_level,
        show_diff=args.diff,
    )

    if args.command in {'show'}:
        print(yaml.dump(ctx.cfg.to_dict(), indent=2))

    if args.command in {'shellrc', 'all'}:
        with ctx.logger.indent(offset=0, label='shellrc'):
            shellrc.process(ctx, ctx.cfg['shellrc'])

    if args.command in {'dotfiles', 'all'}:
        with ctx.logger.indent(offset=0, label='dots'):
            dotfiles.process(ctx, ctx.cfg.get('dots', []))

    if args.command in {'diff'}:
        with ctx.logger.indent(offset=0, label='shellrc'):
            shellrc.process(ctx, ctx.cfg['shellrc'])
        with ctx.logger.indent(offset=0, label='dots'):
            dotfiles.process(ctx, ctx.cfg.get('dots', []))


if __name__ == '__main__':
    main(parse_args())
